{"0": {
    "doc": "XML View",
    "title": "View Configuration",
    "content": "KDRS Search &amp; View can be configured using XML. The currently available tags are described in this section. ",
    "url": "/kdrs-search-and-view-docs/docs/xml#view-configuration",
    
    "relUrl": "/docs/xml#view-configuration"
  },"1": {
    "doc": "XML View",
    "title": "XML View",
    "content": " ",
    "url": "/kdrs-search-and-view-docs/docs/xml",
    
    "relUrl": "/docs/xml"
  },"2": {
    "doc": "Guide",
    "title": "Introduction",
    "content": "This guide is intended to give some familiarity with making XML templates for displaying data from SIARD-files in KDRS Innsyn. It will not contain a full walkthrough of every feature, but is a good place to get started. This guide is written for KDRS Innsyn 1.4.1. ",
    "url": "/kdrs-search-and-view-docs/docs/guide#introduction",
    
    "relUrl": "/docs/guide#introduction"
  },"3": {
    "doc": "Guide",
    "title": "Guide",
    "content": " ",
    "url": "/kdrs-search-and-view-docs/docs/guide",
    
    "relUrl": "/docs/guide"
  },"4": {
    "doc": "Ruby View",
    "title": "Ruby View",
    "content": "KDRS Search &amp; View can be extended for advanced data manipulation and presentation. Some basic XML config is need to activate the view. We encourage the use of XML where possible, and then use Ruby views when needed. This allows for readability in the community. ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view",
    
    "relUrl": "/docs/custom-view"
  },"5": {
    "doc": "Ruby View",
    "title": "Table of Contents",
    "content": ". | Ruby View | Make a new file for the view | Reference the view from xml | Minimum template | Data | Columns | Html | Ruby | CSS | . ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view#table-of-contents",
    
    "relUrl": "/docs/custom-view#table-of-contents"
  },"6": {
    "doc": "Ruby View",
    "title": "Make a new file for the view",
    "content": "In the vendor/your_system/ directory on your host, create a new file for your view. It must start with underscore. Use lowercase. The html.erb extention will make sure that the ruby server will process the file first, then the html engine. /var/kdrs/innsyn/vendor/school_system/_diploma.html.erb . ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view#make-a-new-file-for-the-view",
    
    "relUrl": "/docs/custom-view#make-a-new-file-for-the-view"
  },"7": {
    "doc": "Ruby View",
    "title": "Reference the view from xml",
    "content": "The program flow will be redirected to this view. You will be in control of the presentation. &lt;table&gt; &lt;customview&gt;diploma&lt;/customview&gt; . ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view#reference-the-view-from-xml",
    
    "relUrl": "/docs/custom-view#reference-the-view-from-xml"
  },"8": {
    "doc": "Ruby View",
    "title": "Minimum template",
    "content": "&lt;!-- DATA PREPARATION --&gt; &lt;% # Your data will be in the @docs variable # Adjust your data as needed before presentation %&gt; &lt;!-- DATA PRESENTATION --&gt; &lt;%= render 'table', vi: @vi, ti: @ti %&gt; . This view template will generate the same view as the default template. The difference is that you can manipulate the data as needed, and change the presentation with new styling, headings, extra text, tables etc. Maybe you want some different layout on print. This and more you can change from here. Notice the use of '=' to output Ruby on screen . ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view#minimum-template",
    
    "relUrl": "/docs/custom-view#minimum-template"
  },"9": {
    "doc": "Ruby View",
    "title": "Data",
    "content": "The data from xml will be available to the view in the @docs variable. If you need more data from other tables, you can fetch those here. See the examples for how this is done. ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view#data",
    
    "relUrl": "/docs/custom-view#data"
  },"10": {
    "doc": "Ruby View",
    "title": "Columns",
    "content": "Select the fields you want to show as columns in the view . &lt;% @show_fields = [\"first name\", \"last name\"] @show_fields &lt;&lt; \"land\" #alternative syntax %&gt; . ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view#columns",
    
    "relUrl": "/docs/custom-view#columns"
  },"11": {
    "doc": "Ruby View",
    "title": "Html",
    "content": "You can write plain html in this file . &lt;h1&gt;Hello, there!&lt;/h1&gt; . ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view#html",
    
    "relUrl": "/docs/custom-view#html"
  },"12": {
    "doc": "Ruby View",
    "title": "Ruby",
    "content": "You can write plain Ruby in this file, as long as you use the brackets. &lt;% Ruby here %&gt; . Ruby can be used to edit the data, or write HTML code, like in this example: . &lt;% 5.times do %&gt; &lt;h1&gt;Hello, there!&lt;/h1&gt; &lt;% end %&gt; . ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view#ruby",
    
    "relUrl": "/docs/custom-view#ruby"
  },"13": {
    "doc": "Ruby View",
    "title": "CSS",
    "content": "You can style your data with css, or adjust margins . &lt;style&gt; .my-style { background-color: lightgray; font-size: larger; /* vscode editor will help suggest what to write here */ /* you can also use chatgpt to write css */ } &lt;/style&gt; . Note: It is technically possible use Javascript for advanced presentation. However - we encourage the use of Ruby whenever possible for human readability and code sharing. ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view#css",
    
    "relUrl": "/docs/custom-view#css"
  },"14": {
    "doc": "customview",
    "title": "customview",
    "content": "You can make a custom view if you want advanced layout or features. Make a file e.g. vendor/school_app/_diploma.html.erb You can edit both the data and the presentation. See section “Ruby View” in documentation. &lt;table&gt; &lt;customview&gt;diploma&lt;/customview&gt; . Data from the xml file will be available in @docs . ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/customview/",
    
    "relUrl": "/docs/default-view/customview/"
  },"15": {
    "doc": "debug",
    "title": "Debug",
    "content": "Its possible to pause the code to analyze variables, and step through the code. ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view/debug/#debug",
    
    "relUrl": "/docs/custom-view/debug/#debug"
  },"16": {
    "doc": "debug",
    "title": "In your Ruby View",
    "content": "&lt;% require \"byebug\" %&gt; . Where a break in the code is needed, enter this . &lt;% byebug %&gt; . ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view/debug/#in-your-ruby-view",
    
    "relUrl": "/docs/custom-view/debug/#in-your-ruby-view"
  },"17": {
    "doc": "debug",
    "title": "Attach to the container",
    "content": "To see the debug window . $ docker attach kdrs_innsyn_app . ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view/debug/#attach-to-the-container",
    
    "relUrl": "/docs/custom-view/debug/#attach-to-the-container"
  },"18": {
    "doc": "debug",
    "title": "Quit the container",
    "content": "You need to press this key combination to exit the container, if not it will stop. press ctrl-p, ctrl-q . ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view/debug/#quit-the-container",
    
    "relUrl": "/docs/custom-view/debug/#quit-the-container"
  },"19": {
    "doc": "debug",
    "title": "If the container stops",
    "content": "If you exit the container by pressing ctrl-c instead of the recommended way, it will stop. In that case: . $ docker start kdrs_innsyn_app . ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view/debug/#if-the-container-stops",
    
    "relUrl": "/docs/custom-view/debug/#if-the-container-stops"
  },"20": {
    "doc": "debug",
    "title": "debug",
    "content": " ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view/debug/",
    
    "relUrl": "/docs/custom-view/debug/"
  },"21": {
    "doc": "description",
    "title": "description",
    "content": "Description describes this configuration file. Which system does it support? . &lt;root&gt; &lt;meta&gt; &lt;version&gt;0.1.0&lt;/version&gt; &lt;description&gt;for school system abc&lt;/description&gt; &lt;/meta&gt; . ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/description/",
    
    "relUrl": "/docs/default-view/description/"
  },"22": {
    "doc": "edit",
    "title": "edit",
    "content": "Field values can be edited by using this tag. Any ruby function can be used, as long as its on the format field.ruby_method or field[0..3] etc. The edits will be done in the final table, after all the lookups (joins). Multiple methods can be chained, if needed. Sorting will be done after the edits. Example: . &lt;table&gt; &lt;edit&gt; &lt;field&gt;date[0..9]&lt;/field&gt; &lt;!-- extracts 2010-01-01 from 2010-01-01T18:00:00 --&gt; &lt;field&gt;date[/\\d*-\\d*-\\d*/]&lt;/field&gt; &lt;!-- extracts date based on pattern --&gt; &lt;field&gt;semester.gsub(\"s1\",\"semester 1\")&lt;/field&gt; &lt;!-- semester 1 instead of s1 --&gt; &lt;field&gt;grade.gsub(/^.{0}$/,\"---\")&lt;/field&gt; &lt;!-- If no grade, draw a line --&gt; &lt;field&gt;timer.gsub(\".0\",\"\")&lt;/field&gt; &lt;!-- e.g. 5 instead of 5.0 --&gt; &lt;field&gt;location.capitalize&lt;/field&gt; &lt;!-- Trondheim is a city in norway --&gt; &lt;field&gt;location.titleize&lt;/field&gt; &lt;!-- Trondheim Is A City In Norway --&gt; &lt;field&gt;location.downcase&lt;/field&gt; &lt;!-- trondheim is a city in norway --&gt; &lt;field&gt;location.upcase&lt;/field&gt; &lt;!-- TRONDHEIM IS A CITY IN NORWAY --&gt; &lt;/edit&gt; . Each table can have one edit tag, but many fields, as shown above. Searching on edited fields will currently search in the original data. ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/edit/",
    
    "relUrl": "/docs/default-view/edit/"
  },"23": {
    "doc": "merge columns",
    "title": "Merge columns",
    "content": "Example of merging two columns . ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view/example-merge/#merge-columns",
    
    "relUrl": "/docs/custom-view/example-merge/#merge-columns"
  },"24": {
    "doc": "merge columns",
    "title": "Display the main table",
    "content": "version 1.5 . docs.each do |doc| doc[\"name\"] = doc[\"first_name] + doc[\"last_name] show_fields &lt;&lt; \"name\" &lt;%= render 'table' %&gt; . version 1.4 . &lt;%= render 'table', vi: @vi, ti: @ti %&gt; . ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view/example-merge/#display-the-main-table",
    
    "relUrl": "/docs/custom-view/example-merge/#display-the-main-table"
  },"25": {
    "doc": "merge columns",
    "title": "merge columns",
    "content": " ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view/example-merge/",
    
    "relUrl": "/docs/custom-view/example-merge/"
  },"26": {
    "doc": "examples",
    "title": "Examples",
    "content": "These are som frequently used code snippets for the custom view. ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view/examples/#examples",
    
    "relUrl": "/docs/custom-view/examples/#examples"
  },"27": {
    "doc": "examples",
    "title": "Table of Contents",
    "content": ". | Examples . | Display the main table | Add a new column for full name | Provide an alternative value | Use the first part of the string | Convert utc date to local time zone | Make a custom method | . | . ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view/examples/#table-of-contents",
    
    "relUrl": "/docs/custom-view/examples/#table-of-contents"
  },"28": {
    "doc": "examples",
    "title": "Display the main table",
    "content": "&lt;%= render 'table', vi: @vi, ti: @ti %&gt; . | Will write the content of variable @docs that come from xml | . ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view/examples/#display-the-main-table",
    
    "relUrl": "/docs/custom-view/examples/#display-the-main-table"
  },"29": {
    "doc": "examples",
    "title": "Add a new column for full name",
    "content": "Make a new column that combines first name and last name . &lt;% @docs.each do |doc| doc[\"full name\"] = doc[\"first name\"] + \" \" + doc[\"last name\"] end @show_fields &lt;&lt; \"full name\" %&gt; . ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view/examples/#add-a-new-column-for-full-name",
    
    "relUrl": "/docs/custom-view/examples/#add-a-new-column-for-full-name"
  },"30": {
    "doc": "examples",
    "title": "Provide an alternative value",
    "content": "Show the student grade if it exists, or show a dashed line if its missing . &lt;% @docs.each do |doc| doc[\"grade\"] ||= \"-----\" end @show_fields &lt;&lt; \"full name\" %&gt; . ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view/examples/#provide-an-alternative-value",
    
    "relUrl": "/docs/custom-view/examples/#provide-an-alternative-value"
  },"31": {
    "doc": "examples",
    "title": "Use the first part of the string",
    "content": "E.g. remove time from the string 12.02.2024 11:00 . &lt;% @docs.each do |doc| doc[\"date\"] = doc[\"date\"][0..9] end %&gt; . ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view/examples/#use-the-first-part-of-the-string",
    
    "relUrl": "/docs/custom-view/examples/#use-the-first-part-of-the-string"
  },"32": {
    "doc": "examples",
    "title": "Convert utc date to local time zone",
    "content": "We make a custom method, and use this in the documents loop. def utc_to_local_time(date) Date.parse(date).in_time_zone('Europe/Oslo') end &lt;% @docs.each do |doc| doc[\"date\"] = utc_to_local_time(doc[\"date\"]) end %&gt; . ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view/examples/#convert-utc-date-to-local-time-zone",
    
    "relUrl": "/docs/custom-view/examples/#convert-utc-date-to-local-time-zone"
  },"33": {
    "doc": "examples",
    "title": "Make a custom method",
    "content": "Write out numbers e.g. 3 as “3 tre”, D as “Deltatt” Returns original string if not found . &lt;% def write_out_grade(str) map = { \"1\" =&gt; \"1 en\", \"2\" =&gt; \"2 to\", \"3\" =&gt; \"3 tre\", \"4\" =&gt; \"4 fire\", \"5\" =&gt; \"5 fem\", \"6\" =&gt; \"6 seks\", \"D\" =&gt; \"Deltatt\", \"G\" =&gt; \"God\", \"NG\" =&gt; \"Nokså god\", \"LG\" =&gt; \"Lite god\", \"FU\" =&gt; \"Fullført utdanning\", \"IM\" =&gt; \"Ikke møtt\" } map[str] ? map[str] : str end %&gt; . ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view/examples/#make-a-custom-method",
    
    "relUrl": "/docs/custom-view/examples/#make-a-custom-method"
  },"34": {
    "doc": "examples",
    "title": "examples",
    "content": " ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view/examples/",
    
    "relUrl": "/docs/custom-view/examples/"
  },"35": {
    "doc": "export",
    "title": "export",
    "content": "Places a button in the view for easy printing. In the future we may provide a menu with multiple options. &lt;table&gt; &lt;export&gt;true&lt;/export&gt; . ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/export/",
    
    "relUrl": "/docs/default-view/export/"
  },"36": {
    "doc": "field",
    "title": "field",
    "content": "Specifies one field to be edited . Example: . &lt;table&gt; &lt;name&gt;cities&lt;/name&gt; &lt;fields&gt;name,date&lt;/fields&gt; &lt;edit&gt; &lt;field&gt;name.capitalize&lt;/field&gt; &lt;!-- Like this --&gt; &lt;field&gt;name.titleize&lt;/field&gt; &lt;!-- Like This --&gt; &lt;field&gt;date[0..9]&lt;/field&gt; &lt;/edit&gt; &lt;/table&gt; . You can use any Ruby string method here . ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/field/",
    
    "relUrl": "/docs/default-view/field/"
  },"37": {
    "doc": "fields",
    "title": "fields",
    "content": "Select which fields will be disiplayed from the table . &lt;table&gt; &lt;fields&gt;fname as first name,lname as last name,mobile&lt;/fields&gt; . fields can be renamed by using as . there is no need for spacing between fields. ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/fields/",
    
    "relUrl": "/docs/default-view/fields/"
  },"38": {
    "doc": "filter",
    "title": "filter",
    "content": "Data can be filtered. This will be sent as query to the database. solr syntax can be used, but use human display names for the fields. \\ . Please use AND or OR in uppercase to combine multiple criteria. Currently one pair of filter tags is supported. Example: Show the subjects for a student that are related to his/her final year (type ‘s’). Also include exams (type ‘e’). &lt;table&gt; &lt;name&gt;activity&lt;/name&gt; &lt;filter&gt;type:\"s\" OR type:\"e\"&lt;/filter&gt; . Example: Include all buildings that have the name school . &lt;table&gt; &lt;name&gt;buildings&lt;/name&gt; &lt;filter&gt;name:\"school\"&lt;/filter&gt; . Note Best practice is to use “ “ for the filter values, so that special characters does not alter the query. ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/filter/",
    
    "relUrl": "/docs/default-view/filter/"
  },"39": {
    "doc": "footer",
    "title": "footer",
    "content": "If all rows in a column share the same value, e.g. first name, its recommended to place the value in a header or a footer. &lt;table&gt; &lt;fields&gt;diploma_id&lt;/fields&gt; &lt;footer&gt;diploma_id&lt;/footer&gt; . If you rename a field, use the renamed value for the footer . &lt;table&gt; &lt;fields&gt;diploma_id as diploma id&lt;/fields&gt; &lt;header&gt;diploma id&lt;/header&gt; . If the data is of primary nature, you can use a header instead. Make sure the data is really unique, because the column will be hidden. The first letter will be capitalized. ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/footer/",
    
    "relUrl": "/docs/default-view/footer/"
  },"40": {
    "doc": "foreignkey",
    "title": "foreignkey",
    "content": "If this is a child table, this key will match against the primary key of the parent table. This key is not needed for parent tables. &lt;table&gt; &lt;foreignkey&gt;fk_person&lt;/foreignkey&gt; . Multiple values are not supported for the foreign key. If the primary key has multiple keys, the match will be against the first key. ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/foreignkey/",
    
    "relUrl": "/docs/default-view/foreignkey/"
  },"41": {
    "doc": "header",
    "title": "header",
    "content": "If all rows in a column share the same value, e.g. first name, its recommended to place the value in a header above the table. &lt;table&gt; &lt;fields&gt;firstname&lt;/fields&gt; &lt;header&gt;firstname&lt;/header&gt; . If you rename a field, use the renamed value for header . &lt;table&gt; &lt;fields&gt;fname as firstname&lt;/fields&gt; &lt;header&gt;firstname&lt;/header&gt; . If the data is of second nature, you can use a footer instead. Make sure the data is really unique, because the column will be hidden. The first letter will be capitalized. ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/header/",
    
    "relUrl": "/docs/default-view/header/"
  },"42": {
    "doc": "heading",
    "title": "heading",
    "content": "Creates a heading for the table . &lt;table&gt; &lt;heading&gt;find student&lt;/heading&gt; . The first letter will be capitalized. ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/heading/",
    
    "relUrl": "/docs/default-view/heading/"
  },"43": {
    "doc": "Home",
    "title": "KDRS Search &amp; View",
    "content": "KDRS Search &amp; View brings archives to the web. The system can be configured by using XML (standard view) or Ruby (custom view). ",
    "url": "/kdrs-search-and-view-docs/#kdrs-search--view",
    
    "relUrl": "/#kdrs-search--view"
  },"44": {
    "doc": "Home",
    "title": "Home",
    "content": " ",
    "url": "/kdrs-search-and-view-docs/",
    
    "relUrl": "/"
  },"45": {
    "doc": "logs",
    "title": "Logs",
    "content": "When making a custom view, it is sometimes good to have access to logs. $ docker logs -f kdrs_innsyn_app . ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view/logs/#logs",
    
    "relUrl": "/docs/custom-view/logs/#logs"
  },"46": {
    "doc": "logs",
    "title": "logs",
    "content": " ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view/logs/",
    
    "relUrl": "/docs/custom-view/logs/"
  },"47": {
    "doc": "lookup",
    "title": "lookup",
    "content": "Lookup an id in another table, and get one or more other values. Example: For each personid in table group, lookup this person in table people to find his/her firstname, lastname, phone and nationality_code. Do another lookup to expand the nationality_code into text. Repeat as many times as necessary to reach your goal. &lt;table&gt; &lt;name&gt;group&lt;/name&gt; &lt;fields&gt;personid&lt;/fields&gt; &lt;lookup&gt; &lt;foreignkey&gt;personid&lt;/foreignkey&gt; &lt;table&gt;people&lt;/table&gt; &lt;primarykey&gt;id&lt;/primarykey&gt; &lt;fields&gt;firstname,lastname,phone,nationality_code&lt;/fields&gt; &lt;/lookup&gt; &lt;lookup&gt; &lt;foreignkey&gt;nationality_code&lt;/foreignkey&gt; &lt;table&gt;nationalities&lt;/table&gt; &lt;primarykey&gt;id&lt;/primarykey&gt; &lt;fields&gt;text&lt;/fields&gt; &lt;/lookup&gt; &lt;/table&gt; . The resulting table will expand with new columns. If the lookup table have multiple lines for the same person, also the number of rows will increase. ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/lookup/",
    
    "relUrl": "/docs/default-view/lookup/"
  },"48": {
    "doc": "meta",
    "title": "meta",
    "content": "Meta section is for information about the configuration. &lt;root&gt; &lt;meta&gt; &lt;version&gt;0.1.0&lt;/version&gt; &lt;description&gt;for school system abc&lt;/description&gt; &lt;/meta&gt; . ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/meta/",
    
    "relUrl": "/docs/default-view/meta/"
  },"49": {
    "doc": "methods",
    "title": "Methods",
    "content": "These are the available methods for getting and joining data . ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view/methods/#methods",
    
    "relUrl": "/docs/custom-view/methods/#methods"
  },"50": {
    "doc": "methods",
    "title": "Get data",
    "content": "&lt;% @catalog.get_table(table, criteria,fl:,filter:nil,page:1, rows:DEFAULT_ROWS) %&gt; . | fl: fields to retrieve | criteria: Hash of criteria e.g. {school:”fro”, class:”3a”, year:”2001”} | criteria can also be a set of space separated values, e.g. COURSECODE:”1 2 3” or [] for empty | Returns empty array [] if no hits | . Example: Get customers . &lt;% customers = @catalog.get_table(\"customers\", {active:\"true\"}, fields:\"name, email, address_id\") %&gt; . ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view/methods/#get-data",
    
    "relUrl": "/docs/custom-view/methods/#get-data"
  },"51": {
    "doc": "methods",
    "title": "Join data",
    "content": "Join two tables. This is similar to using the tag “lookup” in xml . &lt;% @catalog.join_table(main:, fk:, pk:, fl:, table:) %&gt; . | main: the main table (hash) that you want to extend with more data | fk: the foreign key in the main document | pk: the primary key in the new table | table: the lookup table that has additional | . Example: Let each customer have a city . &lt;% customers = @catalog.join_table(main:customers, fk:\"address_id\", table:\"address\", pk:id\", fields:\"city\") %&gt; . ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view/methods/#join-data",
    
    "relUrl": "/docs/custom-view/methods/#join-data"
  },"52": {
    "doc": "methods",
    "title": "methods",
    "content": " ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view/methods/",
    
    "relUrl": "/docs/custom-view/methods/"
  },"53": {
    "doc": "name",
    "title": "View name",
    "content": "Gives a menu of view names for the user to select from . ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/name/#view-name",
    
    "relUrl": "/docs/default-view/name/#view-name"
  },"54": {
    "doc": "name",
    "title": "Table name",
    "content": "This name must correspond to a name in the database. ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/name/#table-name",
    
    "relUrl": "/docs/default-view/name/#table-name"
  },"55": {
    "doc": "name",
    "title": "name",
    "content": "Can be used to name a view or a table. &lt;view&gt; &lt;name&gt;grades&lt;/name&gt; &lt;table&gt; &lt;name&gt;students&lt;/name&gt; . ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/name/",
    
    "relUrl": "/docs/default-view/name/"
  },"56": {
    "doc": "parent",
    "title": "parent",
    "content": "The table name of a parent table. This will make this table a child table, and they will be linked. Parents primary key will match the childs foreign key. Example: . &lt;table&gt; &lt;parent&gt;person&lt;/parent&gt; . Tip Sometimes there are no parent table, but you still want to list tables side by side on the menu, as if they had a parent. You can fill out this tag with a common value, e.g. ‘top’. Do this for multiple tables to give the user a multiple choice. ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/parent/",
    
    "relUrl": "/docs/default-view/parent/"
  },"57": {
    "doc": "Part 0: Editing environment",
    "title": "Installing VS Code",
    "content": ". | First we need Visual Studio Code, a text editor from code by microsoft. You can download VS Code here. | After installing VS Code, open VS Code, then open the following links in a browser and click “Install”. They will then open in the VS Code extension viewer where you have to click “Install” again (these extensions may be included in VS Code, if you already have them installed you will se an “Uninstall” button instead): . | Remote - SSH - allows for connecting to a remote machine via SSH and editing files directly in VS Code on your local machine. | Remote - SSH: Editing Configuration Files - let’s you easily edit SSH config files in VS Code. Note: Your browser may ask you if you want to open a link in VS Code. Accept this prompt | . | . ",
    "url": "/kdrs-search-and-view-docs/docs/guide/part-0-editing-environment/#installing-vs-code",
    
    "relUrl": "/docs/guide/part-0-editing-environment/#installing-vs-code"
  },"58": {
    "doc": "Part 0: Editing environment",
    "title": "Connecting via SSH in VS Code",
    "content": ". | Click the remote button in the lower left corner of the screen. | Click “Connect to host”. | Click “Add new SSH Host”. | Enter the username and address of the server running KDRS Innsyn. For SSH this is formatted as &lt;username&gt;@&lt;address&gt;. If you are unsure what to enter here, ask whoever is responsible for managing the server. You will also need the password for the user. | Select where you want to store the configuration file for SSH. The top option, in your user folder, is most commonly used. | Now the server should be added. Open the “Remote Window” again. | Click “Connect to host”. | Click the SSH host you just added. | Choose Linux if prompted. | If informed about the server’s fingerprint, click continue. This message appears the first time connecting to a server via SSH. | Enter the password for the account you connected to. TIP: You can create an SSH certificate and add it on the Linux server to allow for easier SSH login without a password. This guide demonstrates one method of doing this. | . ",
    "url": "/kdrs-search-and-view-docs/docs/guide/part-0-editing-environment/#connecting-via-ssh-in-vs-code",
    
    "relUrl": "/docs/guide/part-0-editing-environment/#connecting-via-ssh-in-vs-code"
  },"59": {
    "doc": "Part 0: Editing environment",
    "title": "Editing files on the remote machine",
    "content": ". | Click the “Explorer” button in the sidebar and select “Open Folder”. | Enter the path /var/kdrs/innsyn/vendor/ and click “OK”. This is the path of the folder where XML templates are stored. | Now we recommend adding the Red Hat XML extension. This should be installed in the VS Code window that is connected to a remote server to make sure it gets activated for remote use. Some benefits of this extension are: . | Warning messages if the XML is invalid | Automatic formatting | Automatic closing of tags (if you write &lt;hello&gt;, you will automatically get &lt;/hello&gt;) | And more… | . | . Note: You can find more extensions to use if you want to, but be careful (especially if working with sensitive data). Just like browser extensions, they can contain malicious code. All extensions recommended in this guide are provided by Microsoft and Red Hat, both considered to be highly reputable. | You are now ready to edit files. On the left side of the screen you can open the “Explorer” sidebar that let’s you navigate the vendor folder we opened and create files there. If you select a file in the explorer, it will open an editor window in the center. | . ",
    "url": "/kdrs-search-and-view-docs/docs/guide/part-0-editing-environment/#editing-files-on-the-remote-machine",
    
    "relUrl": "/docs/guide/part-0-editing-environment/#editing-files-on-the-remote-machine"
  },"60": {
    "doc": "Part 0: Editing environment",
    "title": "Part 0: Editing environment",
    "content": "This part of the guide will walk through some recommended options for editing XML template files on a Linux server. There are many ways of doing this, but our method allows for seamless editing and saving of files on a remote server, in a modern editor with good support for XML files. However, if you already have a workflow for this that you are comfortable with using, feel free to stick to that. ",
    "url": "/kdrs-search-and-view-docs/docs/guide/part-0-editing-environment/",
    
    "relUrl": "/docs/guide/part-0-editing-environment/"
  },"61": {
    "doc": "Part 1: Loading SIARD files",
    "title": "Part 1: Loading SIARD files",
    "content": "Uploading of SIARD files is done in DBPTK (Database Preservation Toolkit), which interprets SIARD files and loads the data into a modern database system that can be used by KDRS Innsyn. | Access DBPTK by using your browser and navigating to the web address KDRS Innsyn runs on followed by :8081. For example, as our server has the address innsyn.detbestearkivet.no we would have to navigate to innsyn.detbestearkivet.no:8081 . | Click “LOAD SIARD FILE” . | Click “CHOOSE FILES…” and select the sakila.siard file that you downloaded in the prerequisites. | Wait until the status indicator shows a green checkmark and click “OPEN SIARD”. | Now our file is uploaded, but we still have to make DBPTK index the data for KDRS Innsyn to access it. This is done by clicking “BROWSE” in the database overview. NOTE: This step takes a long time. You can proceed to part 2 of the guide while waiting, as we do not need the indexing to be finished until part 3. | When the indexing is finished, you should get the popup “SIARD data successfully imported”. You can also verify that the processing was successful by ensuring the “Status” in the database overview is “Ready”. | . ",
    "url": "/kdrs-search-and-view-docs/docs/guide/part-1-loading-siard-files/",
    
    "relUrl": "/docs/guide/part-1-loading-siard-files/"
  },"62": {
    "doc": "Part 2: Configuring KDRS Innsyn",
    "title": "Part 2: Configuring KDRS Innsyn",
    "content": "Now we will log into KDRS innsyn and setup a company (archive) and an account to use. | By default only the admin account exists. Log into the admin account by clicking OK after entering the default credentials: E-mail: admin@kdrs.no Password: admin . | IMPORTANT: Now we have to change the admin password from the default one to a secret, secure one. Click “Admin” in the top right to open the navigation menu and navigate to “Brukere”. | Click the edit icon for the admin user. | Enter a good password and click “OK” (minimum is 14 characters). | Now we need to add our archive. Open the navigation menu and navigate to “Firma”. | Click “Nytt firma”. | In the “Navn” field, enter the name of your archive, then click OK. | Now we can set up an account for an archivist. Archivists have permissions to create new catalogs. Navigate to “Brukere” in the navigation meny and click “Ny bruker”. | Fill out all the fields, select the archive you made for “Firma” and select the checkbox for “Arkivar”, before clicking “OK” to create the new account. | Log out of the admin account and log in to the new account you created. | . We are now ready to create a new template and display some data! . ",
    "url": "/kdrs-search-and-view-docs/docs/guide/part-2-configuring-kdrs-innsyn/",
    
    "relUrl": "/docs/guide/part-2-configuring-kdrs-innsyn/"
  },"63": {
    "doc": "Part 3: Creating our first template",
    "title": "Part 3: Creating our first template",
    "content": "Now we are ready to create our first XML template and display data from the Sakila sample SIARD-file. XML templates are stored in the vendor folder where KDRS Innsyn is stored. The full path would generally be /var/kdrs/innsyn/vendor. | Within the vendor folder, create a new XML file named innsyn_tutorial.xml. This file can be placed in either the root of or in any subdirectory of the vendor folder. Only the name of the file matters. | Now we will fill the file with the bare minium to make it display something in KDRS innsyn: . | . &lt;root&gt; &lt;views&gt; &lt;view&gt; &lt;name&gt;Den beste visningen&lt;/name&gt; &lt;/view&gt; &lt;/views&gt; &lt;/root&gt; . You can choose whatever you want for the name This creates a new “View” for our database, which is a collection of tables. We will add the tables later. | Now we need the UUID of our database. It is found in the top left of the database overview in DBPTK. Copy this ID for the next step (without the enclosing parentheses). | Now go to the KDRS Innsyn frontpage. Enter edit mode by choosing “Rediger” in the navigation menu, and click “Nytt innsyn” to add our new template and link it to the database. | Here we need to enter some information for the new database. The field “Solr ID” should contain the UUID we found in step 3. For the 2 first fields, you are free to enter a title and description of your choosing, but it is required that one of these two fields contain the filename of our XML template. Because our XML file is innsyn_tutorial.xml, we have added that name to the description. After completion, click “OK”. | Now you should see an overview of the new database, showing a link to the view we defined in the XML template. Clicking the link at this point will cause an error, as we have not yet created any tables for it. | . We are now ready to start editing our XML template further to actually extract and present some data from our SIARD-file. ",
    "url": "/kdrs-search-and-view-docs/docs/guide/part-3-creating-our-first-template/",
    
    "relUrl": "/docs/guide/part-3-creating-our-first-template/"
  },"64": {
    "doc": "Part 4: Displaying some data",
    "title": "Part 4: Displaying some data",
    "content": "Now we will actually show some information stored in the database. The following image shows a schema of all the tables in our database: . The database schema is from DBPTK, and is found by clicking “BROWSE” in the database overview The table film looks interesting, so we will click that to view it: Our first task will be to show the title and description of every film in a table. | To do this, we have to start by defining a new table for our view. We do this by adding a &lt;tables&gt; tag containing one &lt;table&gt; tag in our XML template: | . &lt;root&gt; &lt;views&gt; &lt;view&gt; &lt;name&gt;Den beste visningen&lt;/name&gt; &lt;tables&gt; &lt;table&gt; &lt;/table&gt; &lt;/tables&gt; &lt;/view&gt; &lt;/views&gt; &lt;/root&gt; . | Within the &lt;table&gt; tag, there are 4 required tags we need to specify. These are &lt;name&gt;, &lt;heading&gt;, &lt;primarykey&gt; and &lt;fields&gt;. The purpose of these tags is as follows: | . | XML tag | Value | . | &lt;name&gt; | The name of the table in the database we want data from. As we are getting data from the table film, the value will be film | . | &lt;heading&gt; | The name that will be displayed above our table. This can be set to anything you want. | . | &lt;primarykey&gt; | A primary key is a column that has a unique value for every row in a table. For the film table the unique column is film_id, so we have to set the primary key to film_id | . | &lt;fields&gt; | This is a list of columns we want to show data from. The list is comma-separated, so because we want to show data from the columns title and description, we have to set fields to title, description | . | Update the XML template file with the required tags: | ... &lt;table&gt; &lt;name&gt;film&lt;/name&gt; &lt;heading&gt;Den beste tabellen&lt;/heading&gt; &lt;primarykey&gt;film_id&lt;/primarykey&gt; &lt;fields&gt;title, description&lt;/fields&gt; &lt;/table&gt; ... Some parts of the XML file that were not changed in this step have been omitted. | If we open our view now, it should show a table with columns for titles and descriptions. | . Now we have a fully working table, and are ready to learn some more advanced techniques! . ",
    "url": "/kdrs-search-and-view-docs/docs/guide/part-4-displaying-some-data/",
    
    "relUrl": "/docs/guide/part-4-displaying-some-data/"
  },"65": {
    "doc": "Part 5: Editing our table",
    "title": "Part 5: Editing our table",
    "content": "Our table looks pretty good already, but let’s say we want to make it even better by changing the column headers, and having the titles not be capitalized. | To change the column headers, we need to specify the new names within the &lt;fields&gt; tag. We do that by adding as (name) after the column name, where, (name) can be whichever header name we want. Modify the XML-template to include some names of your choosing. | ... &lt;table&gt; &lt;name&gt;film&lt;/name&gt; &lt;heading&gt;Den beste tabellen&lt;/heading&gt; &lt;primarykey&gt;film_id&lt;/primarykey&gt; &lt;fields&gt;title as tittel, description as beskrivelse&lt;/fields&gt; &lt;/table&gt; ... | Now we will make the title fields look better, by improving their capitalization. We can do this by using the &lt;edit&gt; tag. It allows us to run Ruby methods on the fields before displaying them. A very useful method for our usecase is titleize. This method makes text look like a title, by capitalizing the first letter of every word. To use the &lt;edit&gt; tag we need to use &lt;field&gt; tags within it where we specify what edit we will perform. | ... &lt;table&gt; &lt;name&gt;film&lt;/name&gt; &lt;heading&gt;Den beste tabellen&lt;/heading&gt; &lt;primarykey&gt;film_id&lt;/primarykey&gt; &lt;fields&gt;title as tittel, description as beskrivelse&lt;/fields&gt; &lt;edit&gt; &lt;field&gt;tittel.titleize&lt;/field&gt; &lt;/edit&gt; &lt;/table&gt; ... Note that we had to use the name we gave in step 1 to perform the edit. This is because the as keyword renames the variable itself. | That’s it! Now our table looks even better! | . ",
    "url": "/kdrs-search-and-view-docs/docs/guide/part-5-editing-our-table/",
    
    "relUrl": "/docs/guide/part-5-editing-our-table/"
  },"66": {
    "doc": "Part 6: Using data from other tables",
    "title": "Part 6: Using data from other tables",
    "content": "Now it’s time to get a bit more advanced, by including data from another table in the database. | Within the table film there is a column language_id, which we will add to our &lt;fields&gt; tag. | ... &lt;table&gt; &lt;name&gt;film&lt;/name&gt; &lt;heading&gt;Den beste tabellen&lt;/heading&gt; &lt;primarykey&gt;film_id&lt;/primarykey&gt; &lt;fields&gt;title as tittel, description as beskrivelse, language_id&lt;/fields&gt; &lt;edit&gt; &lt;field&gt;tittel.titleize&lt;/field&gt; &lt;/edit&gt; &lt;/table&gt; ... Now our table looks like this: . | As you can see, the language_id column has been added, but it is unfortunatly not very user-friendly in it’s current state, as the language is only represented by a number. This is because there is another table in our database: language, which correlates the IDs with a language. | To make our table use the name of the language instead of the ID, we need to use the &lt;lookup&gt; tag. This tag allows us to use a field as a key in another table, to replace the field itself with values from that second table. The &lt;lookup&gt; tag requires 4 child tags within it, which are as follows: . | . | XML tag | Usage | . | &lt;table&gt; | The name of the table we want to lookup data within. In our case this will be language. | . | &lt;primarykey&gt; | The name of the column from our original table (film) that we will match against a key in the new table (language). In our case it is language_id | . | &lt;foreignkey&gt; | The name of the column in the table we are performing the lookup within that will be matched against the &lt;primarykey&gt;. This is also language_id, as the columns have the same names in both the film and language tables. | . | &lt;fields&gt; | The names of the columns we want to retrieve data from. We only want the name of the language, which is stored in the name column | . | That means we need to make the following addition to our XML template: | . &lt;table&gt; &lt;name&gt;film&lt;/name&gt; &lt;heading&gt;Den beste tabellen&lt;/heading&gt; &lt;primarykey&gt;film_id&lt;/primarykey&gt; &lt;fields&gt;title as tittel, description as beskrivelse, language_id&lt;/fields&gt; &lt;edit&gt; &lt;field&gt;tittel.titleize&lt;/field&gt; &lt;/edit&gt; &lt;lookup&gt; &lt;table&gt;language&lt;/table&gt; &lt;primarykey&gt;language_id&lt;/primarykey&gt; &lt;foreignkey&gt;language_id&lt;/foreignkey&gt; &lt;fields&gt;name as språk&lt;/fields&gt; &lt;!-- We can rename the field using the \"as\" keyword we learned in part 5 --&gt; &lt;/lookup&gt; &lt;/table&gt; . | Now our table includes the language: | . ",
    "url": "/kdrs-search-and-view-docs/docs/guide/part-6-using-data-from-other-tables/",
    
    "relUrl": "/docs/guide/part-6-using-data-from-other-tables/"
  },"67": {
    "doc": "Part 7: Creating child tables",
    "title": "Part 7: Creating child tables",
    "content": "Now we have a list of films, but lets expand it a bit. It could be useful to show which actors played in a film. By using a child table we can let the user click on a film in our first table, which will then open a list of actors that played in that movie. | Let’s check how the tables of films and actors are related. This can be done in the DBPTK schema. We see that film_actor connects the film and actor table. | We can see that the film_actor table contains two columns linking actors with films. This is perfect for our child table, because we can click an entry to use one of it’s fields as a &lt;primarykey&gt;. In our case it will be the film_id of the selected film. We will then display the child table film_actor which contains only the rows where the specified primary key matches a &lt;foreignkey&gt;. The foreign key will also be film_id, as film_actor has that column. | Lets define a new child table in our XML template. This will be done similarily to the first table, but we need 2 extra tags: &lt;parent&gt;, which is the name of the parent table, and as mentioned &lt;foreignkey&gt;, which will be matched against the primary key of the parent table. | ... &lt;tables&gt; &lt;table&gt; &lt;name&gt;film&lt;/name&gt; [...] &lt;!-- Part of our first table omitted to keep the text shorter --&gt; &lt;/table&gt; &lt;table&gt; &lt;!-- Our new child table --&gt; &lt;name&gt;film_actor&lt;/name&gt; &lt;heading&gt;Skuespillerliste&lt;/heading&gt; &lt;primarykey&gt;film_id&lt;/primarykey&gt; &lt;fields&gt;actor_id&lt;/fields&gt; &lt;parent&gt;film&lt;/parent&gt; &lt;foreignkey&gt;film_id&lt;/foreignkey&gt; &lt;/table&gt; &lt;/tables&gt; ... Our child table now looks like this: . | The child actor table is still very barebones, so let’s improve it by using some previously learned techniques to replace the IDs with names using &lt;lookup&gt; and change the column header using as. | ... &lt;table&gt; &lt;name&gt;film_actor&lt;/name&gt; &lt;heading&gt;Skuespillerliste&lt;/heading&gt; &lt;primarykey&gt;film_id&lt;/primarykey&gt; &lt;fields&gt;actor_id&lt;/fields&gt; &lt;parent&gt;film&lt;/parent&gt; &lt;foreignkey&gt;film_id&lt;/foreignkey&gt; &lt;lookup&gt; &lt;table&gt;actor&lt;/table&gt; &lt;primarykey&gt;actor_id&lt;/primarykey&gt; &lt;foreignkey&gt;actor_id&lt;/foreignkey&gt; &lt;fields&gt;first_name as fornavn, last_name as etternavn&lt;/fields&gt; &lt;/lookup&gt; &lt;/table&gt; ... | As a last step it is usually good for child tables like this to have a &lt;header&gt; tag that shows which element the child table is a list for, in our case which film. Because we don’t have access to film titles within the film_actor table, we need to use the film_id to perform a lookup on the film table and retrieve the title. | ... &lt;table&gt; &lt;name&gt;film_actor&lt;/name&gt; &lt;heading&gt;Skuespillerliste&lt;/heading&gt; &lt;primarykey&gt;film_id&lt;/primarykey&gt; &lt;fields&gt;actor_id&lt;/fields&gt; &lt;parent&gt;film&lt;/parent&gt; &lt;foreignkey&gt;film_id&lt;/foreignkey&gt; &lt;header&gt;title as tittel&lt;/header&gt; &lt;!-- The title is retrieved from the second lookup below and renamed. --&gt; &lt;lookup&gt; &lt;table&gt;actor&lt;/table&gt; &lt;primarykey&gt;actor_id&lt;/primarykey&gt; &lt;foreignkey&gt;actor_id&lt;/foreignkey&gt; &lt;fields&gt;first_name as fornavn, last_name as etternavn&lt;/fields&gt; &lt;/lookup&gt; &lt;lookup&gt; &lt;!-- This lookup gets the title from the table film using the film_id --&gt; &lt;table&gt;film&lt;/table&gt; &lt;primarykey&gt;film_id&lt;/primarykey&gt; &lt;foreignkey&gt;film_id&lt;/foreignkey&gt; &lt;fields&gt;title&lt;/fields&gt; &lt;/lookup&gt; &lt;/table&gt; . Our child table should now look like this: . ",
    "url": "/kdrs-search-and-view-docs/docs/guide/part-7-creating-child-tables/",
    
    "relUrl": "/docs/guide/part-7-creating-child-tables/"
  },"68": {
    "doc": "Part 8: Tabs and filters",
    "title": "Part 8: Tabs and filters",
    "content": "The last feature we will add to our template is a new tab that applies a filter. Lets create a new tab that contains all the short films, meaning one hour or less. | We start by adding a &lt;parent&gt; tag to our film table. This tag can contain any name that is not the name of another table, but it needs to be the same across all tables that we want grouped by tabs. After this we duplicate the whole table, but change the &lt;heading&gt; of the second table to make them differentiable. | ... &lt;tables&gt; &lt;table&gt; &lt;!-- Our original table showing all films --&gt; &lt;name&gt;film&lt;/name&gt; &lt;parent&gt;top&lt;/parent&gt; &lt;!-- \"top\" is commonly used to group tables at the top of the hierarchy (no parent tables) --&gt; &lt;heading&gt;Alle filmer&lt;/heading&gt; &lt;primarykey&gt;film_id&lt;/primarykey&gt; &lt;fields&gt;title as tittel, description as beskrivelse, language_id&lt;/fields&gt; &lt;edit&gt; &lt;field&gt;tittel.titleize&lt;/field&gt; &lt;/edit&gt; &lt;lookup&gt; &lt;table&gt;language&lt;/table&gt; &lt;primarykey&gt;language_id&lt;/primarykey&gt; &lt;foreignkey&gt;language_id&lt;/foreignkey&gt; &lt;fields&gt;name as språk&lt;/fields&gt; &lt;/lookup&gt; &lt;/table&gt; &lt;table&gt; &lt;!-- The new table that will show short films --&gt; &lt;name&gt;film&lt;/name&gt; &lt;parent&gt;top&lt;/parent&gt; &lt;heading&gt;Korte filmer&lt;/heading&gt; &lt;primarykey&gt;film_id&lt;/primarykey&gt; &lt;fields&gt;title as tittel, description as beskrivelse, language_id&lt;/fields&gt; &lt;edit&gt; &lt;field&gt;tittel.titleize&lt;/field&gt; &lt;/edit&gt; &lt;lookup&gt; &lt;table&gt;language&lt;/table&gt; &lt;primarykey&gt;language_id&lt;/primarykey&gt; &lt;foreignkey&gt;language_id&lt;/foreignkey&gt; &lt;fields&gt;name as språk&lt;/fields&gt; &lt;/lookup&gt; &lt;/table&gt; ... Now we can see a new tab appear, which will also list every film. | Now we need to add a &lt;filter&gt; tag to our new table. This tag uses SolR queries, and we can use a Range Search to filter by the films which have a length less than or equal to 60. The syntax for this is length: [* TO 60]. Add this within a &lt;filter&gt; tag in the new table. | ... &lt;table&gt; &lt;name&gt;film&lt;/name&gt; &lt;parent&gt;top&lt;/parent&gt; &lt;heading&gt;Korte filmer&lt;/heading&gt; &lt;filter&gt;length: [* TO 60]&lt;/filter&gt; &lt;!-- SolR filter here --&gt; &lt;primarykey&gt;film_id&lt;/primarykey&gt; &lt;fields&gt;title as tittel, description as beskrivelse, language_id&lt;/fields&gt; &lt;edit&gt; &lt;field&gt;tittel.titleize&lt;/field&gt; &lt;/edit&gt; &lt;lookup&gt; &lt;table&gt;language&lt;/table&gt; &lt;primarykey&gt;language_id&lt;/primarykey&gt; &lt;foreignkey&gt;language_id&lt;/foreignkey&gt; &lt;fields&gt;name as språk&lt;/fields&gt; &lt;/lookup&gt; &lt;/table&gt; ... Our new table now only contains films that are 60 minutes or less! . ",
    "url": "/kdrs-search-and-view-docs/docs/guide/part-8-tabs-and-filters/",
    
    "relUrl": "/docs/guide/part-8-tabs-and-filters/"
  },"69": {
    "doc": "Prerequisites",
    "title": "Prerequisites",
    "content": "Before starting this guide, you will need the following: . | Access to a server running KDRS Innsyn. | KDRS Innsyn website access. | SSH/FTP access (or another method to edit files on the Linux server). | . | The example Sakila SIARD-dataset. In this guide we will be making templates for this dataset. | . Download sakila.siard . Copyright Notice: The Sakila SIARD-file is a derivative of MySQL’s Sakila SQL sample database, and therefore subject to the New BSD license. ",
    "url": "/kdrs-search-and-view-docs/docs/guide/prerequisites/",
    
    "relUrl": "/docs/guide/prerequisites/"
  },"70": {
    "doc": "preview",
    "title": "preview",
    "content": "Shows a preview of the data. This is typically used if the number of choices are few, and the user does not need to search for the data. For sensitive data its recommended to disable the preview and require a spesific search. Example: . &lt;table&gt; &lt;preview&gt;false&lt;/preview&gt; . ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/preview/",
    
    "relUrl": "/docs/default-view/preview/"
  },"71": {
    "doc": "primarykey",
    "title": "primarykey",
    "content": "The primary key for this table . &lt;table&gt; &lt;primarykey&gt;person_id&lt;/primarykey&gt; . Sometimes there are multiple candidates. Choose the one that the child tables will refer to. You can also send multiple keys, if the next table needs more parameters. &lt;table&gt; &lt;primarykey&gt;person_id,type&lt;/primarykey&gt; . When selecting a table row, this value or values will be sent as a parameter to the next view. They will be matched against the foreign key in the child table. ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/primarykey/",
    
    "relUrl": "/docs/default-view/primarykey/"
  },"72": {
    "doc": "root",
    "title": "root",
    "content": "All configuration files start with &lt;root&gt; and ends with &lt;/root&gt; . &lt;root&gt; &lt;/root&gt; . ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/root/",
    
    "relUrl": "/docs/default-view/root/"
  },"73": {
    "doc": "rows",
    "title": "Sorting",
    "content": "Beware that sorting will sort this number of rows. One page at a time. If you need to sort across all pages, then increase this number to avoid paging entirely. ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/rows/#sorting",
    
    "relUrl": "/docs/default-view/rows/#sorting"
  },"74": {
    "doc": "rows",
    "title": "Performance",
    "content": "Check to see if the increased loading time for the view is acceptable. Tip Increase the number of rows to get them all in a pdf, or sent to printer. ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/rows/#performance",
    
    "relUrl": "/docs/default-view/rows/#performance"
  },"75": {
    "doc": "rows",
    "title": "rows",
    "content": "Default number of rows is 20. Use this tag to change the default for this view. E.g. for a diploma we always want all rows on the same page, so we set a high number. &lt;table&gt; &lt;rows&gt;1000&lt;/rows&gt; . ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/rows/",
    
    "relUrl": "/docs/default-view/rows/"
  },"76": {
    "doc": "schema",
    "title": "Supporting different siard files",
    "content": "If we have two siard files from the same system, we can experience that one has a schema, and the other not. Then enter a schema name in the xml, and the system will fall back to the first schema if not found. In this way we can keep using the same view configuration. ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/schema/#supporting-different-siard-files",
    
    "relUrl": "/docs/default-view/schema/#supporting-different-siard-files"
  },"77": {
    "doc": "schema",
    "title": "schema",
    "content": "Some large databases are divided into parts called a schema. A table is uniquely referenced by using naming schema.table. To simplify table names, it is recommended to assign a default value for schema. &lt;view&gt; &lt;name&gt;karakterer&lt;/name&gt; &lt;schema&gt;ist&lt;/schema&gt; . ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/schema/",
    
    "relUrl": "/docs/default-view/schema/"
  },"78": {
    "doc": "search",
    "title": "search",
    "content": "A table will be searchable by default. If you want to turn this off, you can set this value to false. &lt;table&gt; &lt;search&gt;false&lt;/search&gt; . Tip Use this for reports, to get a more compact and printer friendly output. ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/search/",
    
    "relUrl": "/docs/default-view/search/"
  },"79": {
    "doc": "sort",
    "title": "sort",
    "content": "Sort the current page based on the given column. Use the tag to get more data for the current page. If the values seem to be integers, the sort will be numeric. If not they will sort as string. Example: . &lt;table&gt; &lt;sort&gt;lastname&lt;/sort&gt; &lt;!-- sorts in ascending order --&gt; . Currently you can sort on one column, either in ascending or descending order. ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/sort/",
    
    "relUrl": "/docs/default-view/sort/"
  },"80": {
    "doc": "table",
    "title": "table",
    "content": "Marks the beginning of a new table configuration. Other fields must preceed this field as shown. &lt;root&gt; &lt;meta&gt; &lt;version&gt;0.1.0&lt;/version&gt; &lt;description&gt;configuration for school system&lt;/description&gt; &lt;/meta&gt; &lt;searches&gt; &lt;search&gt; &lt;name&gt;grades&lt;/name&gt; &lt;schema&gt;my_schema&lt;/schema&gt; &lt;!-- if multiple schemas --&gt; &lt;tables&gt; &lt;table&gt; &lt;name&gt;students&lt;/name&gt; . ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/table/",
    
    "relUrl": "/docs/default-view/table/"
  },"81": {
    "doc": "tables",
    "title": "tables",
    "content": "Group all the tables . Example: . &lt;tables&gt; &lt;table&gt; . ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/tables/",
    
    "relUrl": "/docs/default-view/tables/"
  },"82": {
    "doc": "variables",
    "title": "Variables",
    "content": "These are the available variables . ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view/variables/#variables",
    
    "relUrl": "/docs/custom-view/variables/#variables"
  },"83": {
    "doc": "variables",
    "title": "@docs",
    "content": "Hash containing the data from XML . Example - display the @docs variable . &lt;%= render 'table', vi: @vi, ti: @ti %&gt; . Example - traversing the docs variable . &lt;% @docs.each do |doc| doc[\"first name\"] = doc[\"first name\"].titleize # your code here end %&gt; . ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view/variables/#docs",
    
    "relUrl": "/docs/custom-view/variables/#docs"
  },"84": {
    "doc": "variables",
    "title": "@show_fields",
    "content": "Array of fields to present in the table, and their order. Example - adding and removing fields . &lt;% @show_fields += [\"first name\", \"last name\"] # will add to the exising @show_fields -= [\"first name\", \"last name\"] # will remove these @show_fields = [\"first name\", \"last name\"] # will redefine all fields and their order @show_fields &lt;&lt; \"my column\" # a simple way to add just one field %&gt; . ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view/variables/#show_fields",
    
    "relUrl": "/docs/custom-view/variables/#show_fields"
  },"85": {
    "doc": "variables",
    "title": "variables",
    "content": " ",
    "url": "/kdrs-search-and-view-docs/docs/custom-view/variables/",
    
    "relUrl": "/docs/custom-view/variables/"
  },"86": {
    "doc": "version",
    "title": "version",
    "content": "Version is the version of this configuration file. Convention is major.minor.patch Development starts with 0.1.0, then 0.2.0 if new feature, or 0.1.1 if bugfix. Increase major version to 1.0.0 when ready for production. &lt;root&gt; &lt;meta&gt; &lt;version&gt;0.1.0&lt;/version&gt; &lt;description&gt;for school system abc&lt;/description&gt; &lt;/meta&gt; . ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/version/",
    
    "relUrl": "/docs/default-view/version/"
  },"87": {
    "doc": "view",
    "title": "view",
    "content": "Marks the beginning av a new view. A view has a name and one or more tables. Example: . &lt;views&gt; &lt;view&gt; &lt;name&gt;grades&lt;/name&gt; &lt;tables&gt; &lt;table&gt; . ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/view/",
    
    "relUrl": "/docs/default-view/view/"
  },"88": {
    "doc": "views",
    "title": "views",
    "content": "Group all the views . Example: . &lt;views&gt; &lt;view&gt; &lt;name&gt;grades&lt;/name&gt; &lt;tables&gt; &lt;table&gt; . ",
    "url": "/kdrs-search-and-view-docs/docs/default-view/views/",
    
    "relUrl": "/docs/default-view/views/"
  }
}
